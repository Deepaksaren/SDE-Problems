**Recursive
def helper(i,j,m,n):
    if(i>m or j>n):
        return 0
    if(i==m and j==n):
        return 1
    return helper(i,j+1,m,n)+helper(i+1,j,m,n)
def uniquePaths(m, n):
    res=helper(0,0,m-1,n-1)
    return res
    
**dp
def helper(i,j,m,n, dp):
    if(i>m or j>n):
        return 0
    if(i==m and j==n):
        return 1
    if(dp[i][j]!=-1):
        return dp[i][j]
    else:
        dp[i][j]=helper(i,j+1,m,n,dp)+helper(i+1,j,m,n,dp)
        return dp[i][j]
def uniquePaths(m, n):
    dp=[[-1 for col in range(n)] for row in range(m)]
    res=helper(0,0,m-1,n-1, dp)
    return res
